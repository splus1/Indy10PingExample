unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, IdBaseComponent,
  IdComponent, IdRawBase, IdRawClient, IdIcmpClient;

type
  TForm1 = class(TForm)
    ICMP1: TIdIcmpClient;
    EHost: TEdit;
    ListBox1: TListBox;
    Button1: TButton;
    procedure Button1Click(Sender: TObject);
    procedure ICMP1Reply(ASender: TComponent; const AReplyStatus: TReplyStatus);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
  count : integer;
begin
  ListBox1.Items.Clear;
  ICMP1.Host := EHost.Text;

  for count := 1 to 4 do
    try
      ICMP1.Ping();
      Sleep(1000);
      Application.ProcessMessages;
    finally
      ListBox1.Items.Add('Ping Failed!');
      Application.ProcessMessages;

    end;
end;

procedure TForm1.ICMP1Reply(ASender: TComponent;
  const AReplyStatus: TReplyStatus);
var
  Result : UnicodeString;
begin
  Result := 'Received ' + UnicodeString(AReplyStatus.BytesReceived) +
            ' bytes from ' + AReplyStatus.FromIpAddress +
            ', time = ' + UnicodeString(AReplyStatus.MsRoundTripTime) +
            'ms, ttl = ' + UnicodeString(IntToStr(AReplyStatus.TimeToLive));
  ListBox1.Items.Add(Result);
end;

end.
